/** Author: Ismael Ascencio
 * Course: CPT187
 * Purpose: User Accounts Object
 * CreateDate: 4/15/20**/

package edu.cpt187.ascencio.participation;

import java.util.Scanner;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.FileWriter;

public class UserAccounts 
{

	private final boolean FILE_FOUND = true;
	private final boolean FILE_NOT_FOUND = false;
	private final int NOT_FOUND = -1;
	private final int RESET_VALUE = 0;
	private final int MAXIMUM_RECORDS = 50;
	private String[] userNames = new String[MAXIMUM_RECORDS];
	private String[] passwords = new String[MAXIMUM_RECORDS];
	private boolean fileFoundFlag = false;
	private String masterFileName = "";
	private int recordCount = 0;
	private int searchedIndex = 0;
	//attributes

	public UserAccounts(String borrowedFileName)
	{

		masterFileName = borrowedFileName;

	}//END OF constructor

	public void setUserAccountArrays()
	{

		recordCount = RESET_VALUE;

		try
		{

			Scanner infile = new Scanner(new FileInputStream(masterFileName));

			while(infile.hasNext() == true && recordCount < MAXIMUM_RECORDS)
			{

				userNames[recordCount] = infile.next();
				passwords[recordCount] = infile.next();
				recordCount++;

			}//END OF while

			infile.close();

		}//END OF try

		catch(IOException ex)
		{

			recordCount = NOT_FOUND;

		}//END OF catch

	}//END OF setUserAccountArrays setter

	public void setSearchedIndex(String borrowedUserName)
	{

		searchedIndex = getSeqSearch(borrowedUserName);

	}//END OF setSearchedIndex setter

	public void setSearchedIndex(String borrowedUserName,String borrowedPassword)
	{

		searchedIndex = getSeqSearch(borrowedUserName);

		if(searchedIndex >= 0)
		{

			if(getPasswordMatch(borrowedPassword) == false)
			{

				searchedIndex = NOT_FOUND;

			}//END OF if

		}//END OF if

	}//END OF setSearchedIndex setter

	public void setWriteOneRecord(String borrowedUserName,String borrowedPassword)
	{

		try
		{

			PrintWriter filePW = new PrintWriter(new FileWriter(masterFileName,true));
			filePW.printf("%n%s\t%s%n",borrowedUserName,borrowedPassword);
			fileFoundFlag = FILE_FOUND;
			recordCount++;

			filePW.close();

		}//END OF try

		catch(IOException ex)
		{

			fileFoundFlag = FILE_NOT_FOUND;

		}//END OF catch

	}//END OF setWriteOneRecord setter

	public int getSeqSearch(String borrowedBorrowedUserName)
	{

		int localIndex = 0;
		int localFound = 0;
		//local variables

		localFound = NOT_FOUND;

		while(localIndex < recordCount)
		{

			if(borrowedBorrowedUserName.equalsIgnoreCase(userNames[localIndex]))
			{

				localFound = localIndex;
				localIndex = recordCount;

			}//END OF if

			localIndex++;

		}//END OF while

		return localFound;

	}//END OF getSeqSearch getter

	public boolean getPasswordMatch(String borrowedBorrowedPassword)
	{

		return borrowedBorrowedPassword.equals(passwords[searchedIndex]);

	}//END OF getPasswordMatch getter

	public boolean getFileFoundFlag()
	{
		
		return fileFoundFlag;
		
	}//END OF getFileFoundFlag getter
	
	public String getFileName()
	{

		return masterFileName;

	}//END OF getFileName getter

	public int getRecordCount()
	{

		return recordCount;

	}//END OF getRecordCount getter

	public int getSearchedIndex()
	{

		return searchedIndex;

	}//END OF getSearchedIndex getter

}//END OF CLASS
